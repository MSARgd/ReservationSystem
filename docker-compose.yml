version: '3.7'

services:
  mysql-db:
    image: mysql:latest
    container_name: mysql-db
    restart: always
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_DATABASE: reservation_db
      MYSQL_USER: root
      MYSQL_PASSWORD: 1234@@@@
    volumes:
      - mysql_data:/var/lib/mysql

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    restart: always
    ports:
      - "8080:8080"
    environment:
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      DB_VENDOR: mysql
      DB_ADDR: mysql-db
      DB_DATABASE: keycloak
      DB_USER: root
      DB_PASSWORD: 1234@@@@

  resource-service:
    image: ./Resource-service
    container_name: resource-service
    ports:
      - "8083:8083"
    environment:
      - spring.security.oauth2.client.registration.keycloak.client-name=keycloak
      - spring.security.oauth2.client.registration.keycloak.client-id=customer-service-client
      - spring.security.oauth2.client.registration.keycloak.client-secret=J45So91G9F4mmgJV73qE98a2faDQ5FNF
      - spring.security.oauth2.client.registration.keycloak.scope=openid,profile,email,offline_access
      - spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
      - spring.security.oauth2.client.registration.keycloak.redirect-uri=http://localhost:8083/login/oauth2/code/customer-service-client
      - spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8080/realms/SecureMarketHubRealm
      - spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username
      - spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/reservation-realm
      - spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8080/realms/reservation-realm/protocol/openid-connect/certs
      - spring.application.name=resource-service
      - spring.cloud.config.import-check.enabled=true
      - spring.cloud.config.enabled=false
      - spring.datasource.url=jdbc:mysql://mysql-db:3306/reservation_db?createDatabaseIfNotExist=true
      - spring.jpa.hibernate.ddl-auto=update
      - spring.datasource.username=root
      - spring.datasource.password=1234@@@@
      - spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MariaDBDialect
      - spring.data.jpa.repositories.enabled=true
    depends_on:
      - config-service
      - mysql-db
      - keycloak
    reservation-service:
      image : ./Reservation-service
      container_name: reservation-service
      ports:
        - "8083:8083"
      environment:
        
      depends_on:
        - config-service
        - mysql-db
        - keycloak

  config-service:
    image: ./config-service
    container_name: config-service
    ports:
      - "8888:8888"
    environment:
      - spring.application.name=config-service
      - server.port=8888
      - spring.cloud.config.server.git.default-label=master
      - spring.cloud.config.server.git.uri=https://github.com/MSARgd/config-repo-resource-project
      - spring.cloud.config.server.git.username=MSARgd
      - spring.cloud.config.server.git.password=

  gateway-service:
    image: ./gateway-service
    container_name: gateway-service
    ports:
      - "8082:8082"
    environment:
      - spring.application.name=gateway-service
      - server.port=     

  discovery-service:
    image: ./discovery-service
    container_name: discovery-service
    ports:
      - "8761:8761"
    environment:
      - spring.application.name=DISCOVERY-SERVICE
      - server.port=8761
      - eureka.client.fetch-registry=false
      - eureka.client.register-with-eureka=false
      
volumes:
  mysql_data:
